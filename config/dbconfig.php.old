<html>

<head>

<Title>Example Web Form</Title>

</head>

<body>

<form method="post" action="?action=add" enctype="multipart/form-data" >

    Last name <input type="text" name="lastName" id="lastName"/><br />

    First name <input type="text" name="firstName" id="firstName"/><br />

    E-mail address <input type="text" name="emailAddress" id="emailAddress"/><br />

    <input type="submit" name="submit" value="Submit" />

</form>



<?php

/* Connect to SQL Azure */

$server = "tcp:xxxxxxxxxx.database.windows.net,1433";

$user = "Username@xxxxxxxxxx";

$pass = "password";

$database = "ExampleDB";



$connectionoptions = array("Database" => $database,

                           "UID" => $user,

                           "PWD" => $pass);



$conn = sqlsrv_connect($server, $connectionoptions);

if($conn === false)

{

    die(print_r(sqlsrv_errors(), true));

}



if(isset($_GET['action']))

{

    if($_GET['action'] == 'add')

    {

        /*Insert data.*/

        $insertSql = "INSERT INTO RegistrationTbl (LastName, FirstName, Email, RegDate) VALUES (?,?,?,?)";

        $params = array(&$_POST['lastName'],

                        &$_POST['firstName'],

                        &$_POST['emailAddress'],

                        date("Y-m-d"));

        $stmt = sqlsrv_query($conn, $insertSql, $params);

        if($stmt === false)

        {

            /*Handle the case of a duplicte e-mail address.*/

            $errors = sqlsrv_errors();

            if($errors[0]['code'] == 2601)

            {

                echo "The e-mail address you entered has already been used.<br />";

            }/*Die if other errors occurred.*/

            else

            {

                die(print_r($errors, true));

            }

        }

        else

        {

            echo "Registration complete.</br>";

        }

    }

}



/*Display registered people.*/

$sql = "SELECT * FROM RegistrationTbl ORDER BY LastName";

$stmt3 = sqlsrv_query($conn, $sql);

if($stmt3 === false)

{

    die(print_r(sqlsrv_errors(), true));

}



if(sqlsrv_has_rows($stmt3))

{

    print("<table border='1px'>");

    print("<tr><td>Last Name</td>");

    print("<td>First Name</td>");

    print("<td>E-mail Address</td>");

    print("<td>Registration Date</td></tr>");

    while($row = sqlsrv_fetch_array($stmt3))

    {

        $regDate = date_format($row['RegDate'], 'Y-m-d');

        print("<tr><td>".$row['LastName']."</td>");

        print("<td>".$row['FirstName']."</td>");

        print("<td>".$row['Email']."</td>");

        print("<td>".$regDate."</td></tr>");

    }

    print("</table>");

}

?>

</body>

</html>



<?php
foreach($html->find('div.article') as $article) {
    $item['title']     = $article->find('div.title', 0)->plaintext;
    $item['intro']    = $article->find('div.intro', 0)->plaintext;
    $item['details'] = $article->find('div.details', 0)->plaintext;
    $articles[] = $item;
}
?>



<?php

$userGuid = "7f1f9c8f-d842-4b10-8fda-837caff49df5";
$apiKey = "7f1f9c8fd8424b108fda837caff49df56d5d9dba93dc88105cc0225f9d78270327602e5df561c1cb46591496821e89f450070c9efc269bda121de2c2b616382e8fcbdd2299ffa82a7ab97586802806d8";

// Issues a query request to import.io
function query($connectorGuid, $input, $userGuid, $apiKey) {

    $url = "http://query.import.io/store/connector/" . $connectorGuid . "/_query?_user=" . urlencode($userGuid) . "&_apikey=" . urlencode($apiKey);

    $ch = curl_init($url);
    curl_setopt($ch, CURLOPT_HTTPHEADER, array(
        "Content-Type: application/json",
        "import-io-client: import.io PHP client",
        "import-io-client-version: 2.0.0"
    ));
    curl_setopt($ch, CURLOPT_POSTFIELDS,  json_encode(array("input" => $input)));
    curl_setopt($ch, CURLOPT_POST, 1);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_HEADER, 0);
    $result = curl_exec($ch);
    curl_close($ch);

    return json_decode($result);
}

// Query for tile owltest
echo "Test";
$result = query("71e57dbc-9996-4fa3-8715-c564a347d002", array(
  "webpage/url" => "http://owlkingdom.com/",
), $userGuid, $apiKey, false);
var_dump($result);

 ?>























































Visuallyhidden value 1 : ,
Drrexpiremsgh4 value : ,
Visuallyhidden value 2 : ,
Hotelinfo contents : ,
Visuallyhidden value 3 : ,
Lastbookedsection value : ,
Visuallyhidden value 4 : ,
Hotelugclink value : ,
Visuallyhidden value 5 : ,
Overlink price : ,
Visuallyhidden description : ,
Priceisnow price : ,
Priceis value : ,
Badgesuccess value : ,
Hidden value : ,
Drrexpiremsgblock value : ,
Image : ,
Earncomponent value : ,
Flex link : ,
Hiddenspid value : ,






































Visuallyhidden value 1 :
Hotelinfo contents :
Hotelugclink value :
Overlink price :
Priceisnow price :
Earncomponent value :



Hotelinfo contents :
array(12) { [0]=> array(1) { ["text"]=> string(13) "Today 35% off" }
            [1]=> array(1) { ["text"]=> string(18) "Good Hotel Antigua" }
            [2]=> array(1) { ["text"]=> string(7) "• ESR" }
            [3]=> array(1) { ["text"]=> string(14) "4.0 out of 5.0" }
            [4]=> array(1) { ["text"]=> string(17) "Antigua Guatemala" }
            [5]=> array(1) { ["text"]=> string(50) "Map Toggle map for Good Hotel Antigua and vicinity" }
            [6]=> array(1) { ["text"]=> string(14) "1-866-264-5744" }
            [7]=> array(1) { ["text"]=> string(16) "• Expedia Rate" }
            [8]=> array(1) { ["text"]=> string(29) "Booked in the last 55 minutes" }
            [9]=> array(1) { ["text"]=> string(30) "Based on 7 reviews (7 reviews)" }
            [10]=> array(1) { ["text"]=> string(18) "Price is avg/night" }
            [11]=> array(1) { ["text"]=> string(29) "Hurry! Offer ends in 13:06:37" } } ,
